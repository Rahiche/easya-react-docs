"use strict";(self.webpackChunkeasya_react_docs=self.webpackChunkeasya_react_docs||[]).push([[890],{6197:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"components-basics/TransactionForm","title":"TransactionForm","description":"A React component for handling blockchain transactions with support for multiple currencies and real-time balance checking.","source":"@site/docs/components-basics/TransactionForm.mdx","sourceDirName":"components-basics","slug":"/components-basics/TransactionForm","permalink":"/components-basics/TransactionForm","draft":false,"unlisted":false,"editUrl":"https://github.com/EasyA-Tech/layer-ui-react/tree/main/docs/docs/components-basics/TransactionForm.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"IssueTokenForm","permalink":"/components-basics/IssueTokenForm"},"next":{"title":"TrustLineForm","permalink":"/components-basics/TrustLineForm"}}');var r=s(4848),a=s(8453);const i={},c="TransactionForm",o={},l=[{value:"Features",id:"features",level:2},{value:"States",id:"states",level:2},{value:"Usage",id:"usage",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"transactionform",children:"TransactionForm"})}),"\n",(0,r.jsx)(e.p,{children:"A React component for handling blockchain transactions with support for multiple currencies and real-time balance checking."}),"\n",(0,r.jsx)(e.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Asset selection from available balances"}),"\n",(0,r.jsx)(e.li,{children:"Real-time balance display"}),"\n",(0,r.jsx)(e.li,{children:"Amount input with balance validation"}),"\n",(0,r.jsx)(e.li,{children:"Recipient address input"}),"\n",(0,r.jsx)(e.li,{children:"Transaction status and error handling"}),"\n",(0,r.jsx)(e.li,{children:"Automatic asset list refresh when connection status changes"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"states",children:"States"}),"\n",(0,r.jsx)(e.p,{children:"The component manages several internal states:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Disconnected"}),": Form inputs are disabled"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Connected"}),": Form is active and ready for transaction"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Error"}),": Shows validation errors (e.g., insufficient balance)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Transaction Status"}),": Displays current transaction status"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Asset Selection"}),": Shows available assets and their balances"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { TransactionForm } from './TransactionForm';\n\n// Basic usage within your app\n<TransactionForm />\n"})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>c});var t=s(6540);const r={},a=t.createContext(r);function i(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);