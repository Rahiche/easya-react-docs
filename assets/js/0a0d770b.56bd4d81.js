"use strict";(self.webpackChunkeasya_react_docs=self.webpackChunkeasya_react_docs||[]).push([[726],{7980:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"tutorials/basic-styling","title":"Customizing Styles","description":"This guide explains how to customize the appearance of @easya/layer-ui-react components through both global theme customization and individual component styling.","source":"@site/docs/tutorials/basic-styling.mdx","sourceDirName":"tutorials","slug":"/tutorials/basic-styling","permalink":"/easya-react-docs/tutorials/basic-styling","draft":false,"unlisted":false,"editUrl":"https://github.com/EasyA-Tech/layer-ui-react/tree/main/docs/docs/tutorials/basic-styling.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/easya-react-docs/tutorials/intro"},"next":{"title":"Creating Custom UI Components","permalink":"/easya-react-docs/tutorials/build-a-custom-component"}}');var a=s(4848),i=s(8453);const o={},r="Customizing Styles",c={},l=[{value:"Global Theme Customization",id:"global-theme-customization",level:2},{value:"CSS Variables",id:"css-variables",level:3},{value:"Creating Theme Overrides",id:"creating-theme-overrides",level:3},{value:"Component-Specific Styling",id:"component-specific-styling",level:2},{value:"AddressDisplay Component",id:"addressdisplay-component",level:3},{value:"ConnectButton Component",id:"connectbutton-component",level:3},{value:"Example Implementation",id:"example-implementation",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"customizing-styles",children:"Customizing Styles"})}),"\n",(0,a.jsx)(n.p,{children:"This guide explains how to customize the appearance of @easya/layer-ui-react components through both global theme customization and individual component styling."}),"\n",(0,a.jsx)(n.h2,{id:"global-theme-customization",children:"Global Theme Customization"}),"\n",(0,a.jsx)(n.h3,{id:"css-variables",children:"CSS Variables"}),"\n",(0,a.jsxs)(n.p,{children:["The @easya/layer-ui-react library uses CSS variables for consistent theming across components. These variables are defined in ",(0,a.jsx)(n.code,{children:"packages/easya-react/src/styles/core/_variables.css"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["To customize the theme, create a new CSS file (e.g., ",(0,a.jsx)(n.code,{children:"overrides.css"}),") and override the desired variables:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:":root {\n    /* Main Colors - Light & Web3 Inspired */\n    --easya-primary: #66b2ff;\n    --easya-primary-hover: #5299e6;\n    --easya-primary-active: #3d80cc;\n    --easya-primary-light: #cce0ff;\n    --easya-primary-dark: #0059b3;\n\n    /* Background Colors */\n    --easya-background: #f8f8f8;\n    --easya-background-secondary: #f0f2f5;\n    --easya-background-tertiary: #e0e0e0;\n    --easya-surface: #ffffff;\n    --easya-surface-hover: #f0f0f0;\n\n    /* Text Colors */\n    --easya-text: #333333;\n    --easya-text-secondary: #555555;\n    --easya-text-tertiary: #777777;\n    --easya-text-disabled: #999999;\n    --easya-text-inverse: #ffffff;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"creating-theme-overrides",children:"Creating Theme Overrides"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Create a new CSS file for your overrides"}),"\n",(0,a.jsx)(n.li,{children:"Import it after the main library styles"}),"\n",(0,a.jsx)(n.li,{children:"Override only the variables you want to customize"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// In your app's entry point\nimport '@easya/layer-ui-react/dist/styles.css';\nimport './overrides.css';\n"})}),"\n",(0,a.jsx)(n.h2,{id:"component-specific-styling",children:"Component-Specific Styling"}),"\n",(0,a.jsx)(n.h3,{id:"addressdisplay-component",children:"AddressDisplay Component"}),"\n",(0,a.jsx)(n.p,{children:"The AddressDisplay component uses several CSS classes that can be customized:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* AddressDisplay customization */\n.easya-address-display {\n    /* Container styling */\n}\n\n.easya-address-display__content {\n    /* Content wrapper styling */\n}\n\n.easya-address-display__title {\n    /* Title styling */\n}\n\n.easya-address-display__value {\n    /* Address text styling */\n}\n\n.easya-address-display__value--disconnected {\n    /* Disconnected state styling */\n}\n\n.easya-address-display__value--loading {\n    /* Loading state styling */\n}\n\n.easya-address-display__actions {\n    /* Action buttons container styling */\n}\n\n.easya-address-display__copy,\n.easya-address-display__refresh {\n    /* Button styling */\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"connectbutton-component",children:"ConnectButton Component"}),"\n",(0,a.jsx)(n.p,{children:"The ConnectButton component can be styled using these classes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* ConnectButton customization */\n.connect-button-container {\n    /* Container styling */\n}\n\n.connect-button {\n    /* Base button styling */\n}\n\n.button-connect {\n    /* Connect state styling */\n}\n\n.button-connecting {\n    /* Connecting state styling */\n}\n\n.button-disconnected {\n    /* Disconnected state styling */\n}\n\n.button-error {\n    /* Error state styling */\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-implementation",children:"Example Implementation"}),"\n",(0,a.jsx)(n.p,{children:"Here's a complete example of implementing custom styles:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// App.jsx\nimport '@easya/layer-ui-react/dist/styles.css';\nimport './overrides.css';\n\nfunction App() {\n  return (\n    <div>\n      <AddressDisplay className=\"custom-address-display\" />\n      <ConnectButton className=\"custom-connect-button\" />\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* overrides.css */\n:root {\n    /* Theme overrides */\n    --easya-primary: #66b2ff;\n    --easya-background: #f8f8f8;\n}\n\n/* Component-specific overrides */\n.custom-address-display .easya-address-display__value {\n    font-size: 16px;\n    font-weight: 500;\n}\n\n.custom-connect-button.button-connect {\n    background-color: var(--easya-primary);\n    border-radius: 10px;\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);