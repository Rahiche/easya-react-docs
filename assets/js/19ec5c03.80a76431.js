"use strict";(self.webpackChunkeasya_react_docs=self.webpackChunkeasya_react_docs||[]).push([[974],{2401:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"components-basics/ConnectButton","title":"ConnectButton","description":"A React component that provides blockchain wallet connection functionality with visual feedback and error handling.","source":"@site/docs/components-basics/ConnectButton.mdx","sourceDirName":"components-basics","slug":"/components-basics/ConnectButton","permalink":"/easya-react-docs/components-basics/ConnectButton","draft":false,"unlisted":false,"editUrl":"https://github.com/EasyA-Tech/layer-ui-react/tree/main/docs/docs/components-basics/ConnectButton.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BlockchainProvider","permalink":"/easya-react-docs/components-basics/BlockchainProvider"},"next":{"title":"IssueTokenForm","permalink":"/easya-react-docs/components-basics/IssueTokenForm"}}');var c=s(4848),o=s(8453);const i={},r="ConnectButton",l={},a=[{value:"Features",id:"features",level:2},{value:"Props",id:"props",level:2},{value:"States",id:"states",level:2},{value:"Usage",id:"usage",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"CSS Classes",id:"css-classes",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"connectbutton",children:"ConnectButton"})}),"\n",(0,c.jsx)(e.p,{children:"A React component that provides blockchain wallet connection functionality with visual feedback and error handling."}),"\n",(0,c.jsx)(e.h2,{id:"features",children:"Features"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"Automatic wallet detection"}),"\n",(0,c.jsx)(e.li,{children:"Connect/Disconnect functionality"}),"\n",(0,c.jsx)(e.li,{children:"Visual feedback for connection states"}),"\n",(0,c.jsx)(e.li,{children:"Error messaging for wallet-related issues"}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"props",children:"Props"}),"\n",(0,c.jsxs)(e.table,{children:[(0,c.jsx)(e.thead,{children:(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.th,{children:"Name"}),(0,c.jsx)(e.th,{children:"Type"}),(0,c.jsx)(e.th,{children:"Default"}),(0,c.jsx)(e.th,{children:"Description"})]})}),(0,c.jsx)(e.tbody,{children:(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{children:"className"}),(0,c.jsx)(e.td,{children:"string"}),(0,c.jsx)(e.td,{children:"''"}),(0,c.jsx)(e.td,{children:"Additional CSS classes to customize the button's appearance"})]})})]}),"\n",(0,c.jsx)(e.h2,{id:"states",children:"States"}),"\n",(0,c.jsx)(e.p,{children:"The component can be in one of these states:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Wallet Not Found"}),": Indicates no compatible wallet is installed"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Connected"}),': Shows "Disconnect" and allows disconnecting from the blockchain']}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Connecting"}),': Shows "Connecting..." while establishing connection']}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Disconnecting"}),': Shows "Disconnecting..." while terminating connection']}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Error"}),": Displays error messages when issues occur"]}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-tsx",children:"import { ConnectButton } from './ConnectButton';\n\n// Basic usage\n<ConnectButton />\n\n// With custom styling\n<ConnectButton className=\"my-custom-class\" />\n"})}),"\n",(0,c.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,c.jsx)(e.p,{children:"The component automatically handles and displays common errors:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"Missing wallet installation"}),"\n",(0,c.jsx)(e.li,{children:"Connection failures"}),"\n",(0,c.jsx)(e.li,{children:"Disconnection issues"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"All errors are displayed below the button in red text."}),"\n",(0,c.jsx)(e.h2,{id:"css-classes",children:"CSS Classes"}),"\n",(0,c.jsx)(e.p,{children:"The component uses these class names for different states:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"button-error"}),": When no wallet is installed"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"button-disconnected"}),": When connected (showing disconnect option)"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"button-connecting"}),": During connection process"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"button-disconnecting"}),": During disconnection process"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"button-connect"}),": Default state (ready to connect)"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>r});var t=s(6540);const c={},o=t.createContext(c);function i(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:i(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);